@model  ProductsDistribution.Models.InputModels.AnnouncementInputModel

<head>
    <link href="@Url.Content("~/Content/Themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />

</head>

<style>
    .custom-combobox {
        position: relative;
        display: inline-block;
    }

    .custom-combobox-toggle {
        position: absolute;
        top: 0;
        bottom: 0;
        margin-left: -1px;
        padding: 0;
        /* support: IE7 */
        *height: 1.7em;
        *top: 0.1em;
    }

    .custom-combobox-input {
        margin: 0;
        padding: 0.3em;
    }
</style>



@using (Html.BeginForm())
{

    <button class="add-announcement" onclick="AddTextBox()">
        Добави
    </button>
      <div id="announcementForm">

        <table id="announcements">
            <thead>
                <tr></tr>
                @*<tr>
                    <th>Дата на пристигане на доставката</th>
                    <th>Производител</th>
                    <th>Продукт</th>
                    <th>Цена</th>
                    <th>Максимално количество за доставка</th>

                    <th></th>
                </tr>*@
            </thead>
            <tbody id="an">
                @Html.Partial("AnnouncementInfo",new ProductsDistribution.Models.InputModels.AnnouncementInfo())
                
                @*@for (int i = 0; i < Model.announcementInfo.Count; i++)
                {
                    @Html.EditorFor(m => m.announcementInfo[i])
                }*@
            </tbody>


        </table>

          </div>



        <div id="forms">
            


        </div>


    @*@Html.AntiForgeryToken()


    <div class="form-horizontal" id="announcementForm">
        <h4>AnnouncementInputModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div id="announcementDetails">

        <div class="form-group">
            @Html.LabelFor(model => model.arrive_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.arrive_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.arrive_date, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.producerNames, "Производител :", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10" id="producers">


                @Html.DropDownListFor(m => m.selected_producerName, Model.producerNames, "", new { @id = "combobox" })


                @Html.ValidationMessageFor(model => model.selected_producerName, "", new { @class = "text-danger" })

            </div>
        </div>
            </div>

       
        <div class="form-group" id="productForm">     
    
                @Html.Partial("_ProductAnnouncementInputModel", new ProductsDistribution.Models.InputModels.ProductAnnouncementInputModel())

            @Html.ActionLink("Добави продукт", "LoadBlankFormView", null, new { @id = "lnkAddNewAnnouncement", @class = "btn btn-primary" })
          
      </div>
        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
   

}


@section scripts
{

    <script src="@Url.Content("~/Scripts/jquery.autocomplete.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.js")"></script>
    <script src="@Url.Content("~/Scripts/GenerateComboBox.js")"></script>
    <script>
        $('#lnkAddNewAnnouncement').click(function () {
           // var index = parseInt($('.form-horizontal:last').data('rownum')) + 1;

            $.ajax({
                url: "/Announcement/AddNewAnnouncement",
                type: "GET",
                cache: false,
                success: function (html) {
                    $('#productForm:last').after($("#announcement"));
                }
            });
            return false;
        });

    </script>

@*<script>
        $(document.body).on("click", "a.deleteAnnouncement", function () {
            $(this).parents('#announcementForm:first').remove();
            return false;
        });
</script>*@

<script>
        $(document.body).on("click", "a.delete-announcement", function () {
            //$(this).closest('#an').hide();
            //$(this).prev('input').val('true');
            
            $(this).parents("#announcementForm:first").remove();
            $(this).prev('input').val('true');
            return false;
        });

</script>
    <script>
  //  $(document).on("click", ".add-announcement", function(){
 	// var nextIndex = $("table#announcements tbody tr").length;
  //	$.ajax({
  //          url: "/Announcement/AddNewAnnouncement",
  //          type: 'POST',
  //          data: { index: nextIndex },
  //          success: function(results) {
  //              $("table#announcements tbody").append(results);
  //          }
  //      });
  //});
        $('.add-announcement').click(function () {
            // var index = parseInt($('.form-horizontal:last').data('rownum')) + 1;
            
            $.ajax({
                url: "/Announcement/AddNewAnnouncement",
                type: "GET",
                cache: false,
                success: function (html) {

                   
                   // var content = $('#announcement').html();
                 //  $('#forms').append(html);
                    
                   
                }
            });
            return false;
        });
    
    </script>
  
        <script type="text/javascript">
        function GetDynamicTextBox() {
            var div = $("<div />");
 
            //  var textBox = $("<input />").attr("type", "textbox").attr("name", "DynamicTextBox");
           
            var textBox = $('#announcementForm').html();
          //  textBox.val(value);
            div.append(textBox);
 
            var button = $("<input />").attr("type", "button").attr("value", "Remove");
            button.attr("onclick", "RemoveTextBox(this)");
            div.append(button);
 
            return div;
        }
        function AddTextBox() {
            var div = GetDynamicTextBox();
            $("#forms").append(div);
        }
 
        function RemoveTextBox(button) {
            $(button).parent().remove();
        }
 
        @*$(function () {
            var values = eval('@Html.Raw(ViewBag.Values)');
            if (values != null) {
                $("#forms").html("");
                $(values).each(function () {
                    $("#forms").append(GetDynamicTextBox());
                });
            }
        });*@
   

    </script>
   
}


