@model ProductsDistribution.Models.InputModels.ProducerInputModel






@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProducerInputModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.producer_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.producer_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.producer_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telephone_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telephone_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telephone_number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.producer_address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.producer_address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.producer_address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.producer_email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.producer_email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.producer_email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.products, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.ValidationMessageFor(model => model.selected_products, "", new { @class = "text-danger" })

                @Html.DropDownListFor(m => m.selected_products, Model.products, "", new { @multiple = "multiple", @placeholder = "Моля изберете продукти", @class = "ddlMultiSlectBox" })
              
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section scripts {


<script src="../../Scripts/jquery.sumoselect.js" type="text/javascript"></script>
<link href="../../Content/dropdownliststyle.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
    $(document).ready(function () {
        window.asd = $('.ddlMultiSlectBox').SumoSelect({ csvDispCount: 4 });
    });
</script>
}